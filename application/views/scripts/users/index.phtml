<?php
/** 
 * controller => users
 * action => index
 */
$this->headTitle($this->currentUser->fullName);
$this->headLink()->prependStylesheet($this->baseUrl() . '/css/user.css');
$this->headLink()->prependStylesheet($this->baseUrl() . '/css/profile.css');
$this->headScript()->prependFile($this->baseUrl() . '/js/user.js');
$this->headScript()->prependFile($this->baseUrl() . '/js/profile.js');
?>


<?php
$this->placeholder('absolute')->captureStart();

echo $this->partial('partials/global/alertBack.phtml');
echo $this->alert()->confirmAlert();


$this->placeholder('absolute')->captureEnd();


// Narrow right column
$this->placeholder('narrowColumn')->captureStart();
echo "<img src='" . $this->currentUser->getProfilePic('large') . "' class='narrow-column-picture dropshadow'/>";

echo "<div class='user-narrow-info-container clear'>";
echo 	"<p class='clear darkest'>" . $this->currentUser->age . " years old</p>";
echo 	"<p class='clear darkest'>" . $this->currentUser->getSexFull() . "</p>";
echo 	"<p class='clear darkest'>" . $this->currentUser->getHeightInFeet() . "</p>";
echo "</div>";

$sections = array('players', 'teams');

echo $this->narrowteamsection($this->currentUser, $sections);

echo "<div class='width-100 narrow-column-calendar-container clear'>";
echo $this->calendar()->createCalendar($this->currentUser->games->games, true);
echo "</div>";

$this->placeholder('narrowColumn')->captureEnd();

?>
<span id='user-details'
		actingUserID='<?php echo $this->user->userID;?>'
	  	receivingUserID='<?php echo $this->currentUser->userID;?>'>
</span>


<header class='clear user-name-container'>
	<p class='user-name heavy darkest clear'>
    	<?php echo $this->currentUser->shortName;?>
	</p>
    <div class='user-city-container clear'>
        <p class='light clear'>
            <?php echo $this->currentUser->city->city . ", " . $this->currentUser->city->state;?>
        </p>    
        <p class='light clear'>
            Last active <?php echo $this->currentUser->getLastActiveFromNow();?>
        </p> 
    </div>
</header>

<div id='profile-buttons-container'>
	<?php
	if ($this->currentUser->userID != $this->user->userID) {
		// Not current user
	?>
    <a href='/users/<?php echo $this->user->userID;?>/group/<?php echo $this->currentUser->userID;?>' class='button right' id='user-message' onclick='window.location = this.href;'> <!-- strange bug in jQuery plugin section of global.js that prevents clicking the message button.  force redirect with inline onclick -->
    	Message
    </a>
    <?php
	
		if (!$this->user->players->userExists($this->currentUser->userID)) {
			// user is not already a friend
			
			?>
			<p class='button right profile-buttons-margin-right' id='user-player-request' tooltip="Connected players enjoy playing together or play together often. Connecting makes it easier to see each other's upcoming games.">
				Player Request
			</p>
    <?php } else {?>
    		<p class='right medium smaller-text pointer action profile-buttons-margin-right' id='user-player-cancel-request' tooltip='You are currently connected with this player.  Remove them?'>
            	Remove Player
            </p>
    <?php }
		
			echo "<div class='clear-right larger-margin-top'>" . $this->inviteButton . "</div>";
		}
	?>
</div>

<div id='user-sports-container' class='clear'>
	<?php
		echo $this->profilesportsections()->start($this->currentUser->sports, $this->selectedSport);
		$lowerOutput = '';
		$count = 0;
		foreach ($this->currentUser->sports as $sport) {
			
			$class = $tabClass = '';
			if ($this->selectedSport) {
				// Sport selected in controller
				if (strtolower($sport->sport) == strtolower($this->selectedSport)) {
					$class = 'user-sport-container-selected';
					$tabClass = 'user-sport-selected';
				}
			} elseif ($count == 0) {
				// First sport, show box
				$class = 'user-sport-container-selected';
				$tabClass = 'user-sport-selected';
			}
			
			$lowerOutput .= "<div class='user-sport-container rounded-corners light-back " . $class . " dropshadow-bottom'>";
			$lowerOutput .= 	"<div class='user-sport-left-container'>";
			$lowerOutput .= 		"<p class='clear darkest'>";
			
			// Positions
			$counter = 0;
			if ($sport->hasValue('positions')) {
				foreach ($sport->positions as $position) {
					$lowerOutput .= $position->positionName;
					if ($counter !== count($sport->positions) - 1) {
						$lowerOutput .= '/';
					}
					$counter++;
				}
			}
			
			// Best skill
			$lowerOutput .= 		"<p class='darkest clear'>";
			
			if ($firstSkill = $sport->ratings->getBestSkill(0)) {
				$lowerOutput .= "<span class='darkest largest-text'>" . $firstSkill . "</span>";
			}
			if ($secondSkill = $sport->ratings->getBestSkill(1)) { 
				$lowerOutput .= ", <span class='darkest larger-text'>" . $secondSkill . "</span>";
			}
			if ($thirdSkill = $sport->ratings->getBestSkill(2)) { 
				$lowerOutput .= ", <span class='darkest'>" . $thirdSkill . "</span>";
			}
			
			if (!$firstSkill) {
				// No skill was found, display none
				$lowerOutput .= "<span class='medium larger-text'>No skills have been rated.</span>";
			}
			
			// Wants to play ??
			$lowerOutput .= 		"<div class='clear user-sport-want-outer-container'>";
			$lowerOutput .= 			"<p class='clear dark user-sport-want-looking'> Looking for:</p>";
			$lowerOutput .= 			"<div class='user-sport-want-inner-container left'>";
		
			foreach ($sport->formats as $format) {
				$lowerOutput .=				"<p class='darkest clear'>" . ucwords($format->format) . "</p>";
			}

			// Array of types, display
			$typeSuffixes = '';
			$typeSuffixArray = array();
			foreach ($sport->types as $type) {
				
				if (in_array($type->typeName, $sport->formats) || strtolower($type->typeName) == 'pickup') {
					// Type was already displayed above
					continue;
				}
				$lowerOutput  .=			"<p class='medium clear user-sport-type'>" . ucwords($type->typeName) . "</p>";
				
				if (in_array($type->typeSuffix, $typeSuffixArray)) {
					// Suffix was already used
					continue;
				}
				$typeSuffixes .= 			"<p class='medium clear user-sport-type'>" . ucwords($type->typeSuffix) . "</p>";
				$typeSuffixArray[] = $type->typeSuffix;
			}
			$lowerOutput .= $typeSuffixes;
			
			$lowerOutput .=				"</div>";
			$lowerOutput .=			"</div>";
			$lowerOutput .=		"</div>";	
			// Ratings
			$ratings      = array('Overall' => '', 
								  'skill' => 'skill', 
								  'sportsmanship' => 'sprtmn', 
								  'attendance' => 'attnd');			
			$lowerOutput .= 	"<div class='user-sport-right-container'>";
			$lowerOutput .=			"<p class='medium smaller-text action right why-ratings pointer'>What are these ratings?</p>";
			$lowerOutput .=			"<a href='/users/" . $this->currentUser->userID . "/ratings/" . strtolower($sport->sport) . "' class='user-sport-rating-container'>";
			$counter = 1;
			
			foreach ($ratings as $rating => $abbrev) {
				/*
				$class = 'user-sport-rating-other-outer';
				$hiddenClass = 'user-sport-rating-percent';
				
				if ($rating == 'Overall') {
					$class = 'user-sport-rating-overall-outer';
					$hiddenClass = '';
				}
				
				$lowerOutput .=				"<div class='" . $class . " rating-outer'>";
				$lowerOutput .=					"<div class='rating-inner' style='width:" . $sport->$rating . "%'>";
				$lowerOutput .=						"<p class='white left rating-inner-word'>" . $rating . "</p>";
				$lowerOutput .=						"<p class='white right rating-inner-percent " . $hiddenClass . " heavy'>" . $sport->$rating . "%</p>";
				$lowerOutput .=					"</div>";
				$lowerOutput .=				"</div>";
				*/
				$class = 'left larger-text user-rating-container';
				$label = "<p class='clear width-100 center white smaller-text'>" . $abbrev . "</p>";
				$value = "<p class='clear width-100 center inherit'>" . $sport->$rating . "</p>";
				
				if ($rating == 'Overall') {
					$class = 'clear width-100 jumbo-text heavy user-rating-container-first';
					$label = '';
				} elseif ($counter == count($ratings)) {
					// Last one
					$class .= ' user-rating-container-last';
				}
				$lowerOutput .= "<div class='center medium-background white " . $class . "'>" . $label . $value . "</div>";
				
				$counter++;
			}
			
			$numRatings   = (!$sport->ratings->hasValue('ratings') ? 0 : count($sport->ratings->ratings));
			$str = 'ratings';
			if ($numRatings == 1) {
				$str = 'rating';
			}
			$lowerOutput .= 		"</a>";
			$lowerOutput .=				"<a href='/users/" . $this->currentUser->userID . "/ratings/" . strtolower($sport->sport) . "' class='dark clear-right user-sport-num-ratings'>" 
										. $numRatings . " " . $str
										. "</a>";			
			$lowerOutput .= 	"</div>";
			$lowerOutput .= "</div>";
			
			$count++;
		}
	?>
    
</div>

<?php
	// Sports section
	echo $lowerOutput;
	
	
	/*
	echo $this->partial('partials/global/sectionHeaderPlain.phtml',array('title'   => 'Upcoming Games'));
	
	$games = $this->user->games->getAll();
	for ($i = 0; $i < 3; $i++) {
		echo "<img src='" . $games[$i]->getProfilePic('large') . "' class='left'/>";
	}*/
	
	// Activity section
	echo "<div id='user-activities-container'>";
	foreach ($this->activities as $activity) {
		echo $this->memberHomepage->createNotification($activity, 'small');
	}
	echo "</div>";
?>


    

    
    
